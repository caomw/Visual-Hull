cls

P1 = [
   5.5556717e+02,  -1.7074352e+02,  -1.4550276e+02,   1.2435402e+06
  -5.8217798e+00,   1.2292557e+01,  -5.4030875e+02,   1.1521306e+06
   6.3394879e-01,   6.3940563e-01,  -4.3505100e-01,   3.3213773e+03    
];

P2 = [
   9.1608225e+01,  -5.3907209e+02,  -7.5729444e+01,   1.0262064e+06
   5.5266378e+01,  -7.4632918e+01,  -4.3070375e+02,   8.8139992e+05
   8.1572943e-01,  -4.8691322e-01,  -3.1225153e-01,   2.7719173e+03
];

P3 = [
  -4.1442237e+02,   4.2403411e+02,  -1.3384692e+02,   8.9561887e+05
  -5.4455347e+00,   2.3009955e+01,  -5.4568941e+02,   1.1167252e+06
  -8.4500286e-01,  -2.2222591e-01,  -4.8640087e-01,   3.5619410e+03 
];

P4 = [
   -3.8485718e+00,   6.0217847e+02,  -1.3280123e+01,   8.6395101e+05
   4.2542320e+01,   1.2267203e+02,  -5.2604079e+02,   1.1214010e+06
  -7.4627388e-01,   5.1489832e-01,  -4.2184714e-01,   3.6972933e+03
];

mT = [
1, 0, 0, -3000
0, -1, 0, 2000
0, 0, 1, 0
0, 0, 0, 1    
];

roomsizeX = 8;
roomsizeY = 6;
roomsizeZ = 2;

threadz = 64;
threadx = 2;
thready = 2;
blockx = 100;
blocky = 80;

ratiox = roomsizeX/(threadx*blockx);
ratioy = roomsizeY/(thready*blocky);
ratioz = roomsizeZ/threadz;

k = parallel.gpu.CUDAKernel('visual_hull_test.ptx', 'visual_hull_test.cu');
k.ThreadBlockSize = [threadx thready threadz];
k.GridSize = [blockx blocky];